name: PR Checks

on:
  pull_request:
    branches:
      - "main*"

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        export PYTHONPATH="$PYTHONPATH:$PWD"
        python -m pip install --upgrade pip
        pip install -e ".[codegen]"
    - name: Run Unit Tests
      run: |
        pytest tst
    - name: Put Failure Metrics
      if: ${{ failure() }}
      run: |
        echo "Unit test run Failed. Putting Failure Metrics onto Cloudwatch"
        aws cloudwatch put-metric-data --metric-name UnitTestFailure --namespace SecurityMonitoringMetrics --value 1 --unit Count --dimensions MetricCategory=Unit-${{ matrix.python-version }}
    - name: Put Success Metrics
      if: ${{ success() }}
      run: |
        echo "Unit test run Succeeded. Putting Success Metrics onto Cloudwatch"
        aws cloudwatch put-metric-data --metric-name UnitTestSuccess --namespace SecurityMonitoringMetrics --value 1 --unit Count --dimensions MetricCategory=Unit-${{ matrix.python-version }}

  resources-coverage:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.12" ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          export PYTHONPATH="$PYTHONPATH:$PWD"
          python -m pip install --upgrade pip
          pip install coverage
          pip install -e ".[codegen]"
      - name: Run Unit Tests
        run: |
          coverage run --source=src -m pytest tst/generated/test_resources.py && coverage report
          
  pylint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        export PYTHONPATH="$PYTHONPATH:$PWD"
        python -m pip install --upgrade pip
        pip install -e ".[codegen]"
    - name: Run Pylint
      run: |
        python_files=$(find . -name '*.py')
        pylint $python_files --persistent=y --fail-under=8
